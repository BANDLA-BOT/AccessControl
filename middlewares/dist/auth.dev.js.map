{"version":3,"sources":["auth.js"],"names":["jwt","require","auth","req","res","next","token","headers","authorization","split","status","send","decoded","verify","user","error","module","exports"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7B,MAAMC,KAAK,GACXH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,IAA6BL,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAD7B;AAEA,MAAI,CAACH,KAAL,EAAY,OAAOF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB,CAAP;;AAEZ,MAAI;AACA,QAAMC,OAAO,GAAGZ,GAAG,CAACa,MAAJ,CAAWP,KAAX,EAAkB,YAAlB,CAAhB;AACAH,IAAAA,GAAG,CAACW,IAAJ,GAAWF,OAAX;AACAP,IAAAA,IAAI;AACP,GAJD,CAIE,OAAOU,KAAP,EAAc;AACZX,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACH;AACJ,CAZD;;AAcAK,MAAM,CAACC,OAAP,GAAiBf,IAAjB","sourcesContent":["const jwt = require('jsonwebtoken');\r\n\r\nconst auth = (req, res, next) => {\r\n    const token =\r\n    req.headers.authorization && req.headers.authorization.split(\" \")[1];\r\n    if (!token) return res.status(401).send('Access denied. No token provided.');\r\n\r\n    try {\r\n        const decoded = jwt.verify(token, 'jwt_secret');\r\n        req.user = decoded;\r\n        next();\r\n    } catch (error) {\r\n        res.status(400).send('Invalid token.');\r\n    }\r\n};\r\n\r\nmodule.exports = auth;\r\n"],"file":"auth.dev.js"}