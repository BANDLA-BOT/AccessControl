{"version":3,"sources":["auth.js"],"names":["jwt","require","res","next","token","auth","headers","authorization","req","split","send","decoded","verify","user","error","module","exports"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBAAdD,KAAMC,SAAAA,EAAQC,EAAAC,GAGhB,IAAMC,EADJC,EAAIC,QAAGC,eAAAC,EAAWL,QAASI,cAAAE,MAAA,KAAA,GAC7B,IAAML,EACNI,OAAIF,EAAQC,OAAAA,KAAZG,KAA6BF,qCAG7B,IAAI,IAAAG,EAAAX,IAAAY,OAAAR,EAAA,cACMO,EAAAA,KAAUX,EACZa,IACJV,MAAIW,GACNZ,EAAOY,OAAO,KAAAJ,KAAA,oBAKpBK,OAAOC,QAAUX","file":"auth.min.js","sourcesContent":["const jwt = require('jsonwebtoken');\r\n\r\nconst auth = (req, res, next) => {\r\n    const token =\r\n    req.headers.authorization && req.headers.authorization.split(\" \")[1];\r\n    if (!token) return res.status(401).send('Access denied. No token provided.');\r\n\r\n    try {\r\n        const decoded = jwt.verify(token, 'jwt_secret');\r\n        req.user = decoded;\r\n        next();\r\n    } catch (error) {\r\n        res.status(400).send('Invalid token.');\r\n    }\r\n};\r\n\r\nmodule.exports = auth;\r\n"]}