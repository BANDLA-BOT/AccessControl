{"version":3,"sources":["server.js"],"names":["express","require","cors","nodemailer","hbs","mongoose","authRoutes","privateRoutes","randomString","app","use","json","hbsOptions","viewEngine","defaultLayout","partialsDir","layoutsDir","viewPath","transporter","createTransport","service","auth","user","pass","sendEmail","to","subject","template","context","mailOptions","from","sendMail","err","info","console","log","access","connect","then","PORT","process","env","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,+BAAD,CAAnB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMM,aAAa,GAAGN,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAMO,YAAY,GAAGP,OAAO,CAAC,cAAD,CAA5B;;AACA,IAAMQ,GAAG,GAAGT,OAAO,EAAnB,C,CAEA;;AACAS,GAAG,CAACC,GAAJ,CAAQV,OAAO,CAACW,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQR,IAAI,EAAZ,E,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBJ,UAArB;AACAG,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBH,aAAxB,E,CAEA;;AACA,IAAMK,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAC;AACPC,IAAAA,aAAa,EAAC,aADP;AAEPC,IAAAA,WAAW,EAAC,OAFL;AAGPC,IAAAA,UAAU,EAAC;AAHJ,GADI;AAMfC,EAAAA,QAAQ,EAAC;AANM,CAAnB;AAQA,IAAMC,WAAW,GAAGf,UAAU,CAACgB,eAAX,CAA2B;AAC3CC,EAAAA,OAAO,EAAC,OADmC;AAE3CC,EAAAA,IAAI,EAAC;AACDC,IAAAA,IAAI,EAAC,oBADJ;AAEDC,IAAAA,IAAI,EAAC;AAFJ;AAFsC,CAA3B,CAApB;AAOAL,WAAW,CAACR,GAAZ,CAAgB,SAAhB,EAA2BN,GAAG,CAACQ,UAAD,CAA9B;;AAOA,SAASY,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAkD;AAC9C,MAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAG,oBADS;AAEhBL,IAAAA,EAAE,EAAFA,EAFgB;AAGhBC,IAAAA,OAAO,EAAPA,OAHgB;AAIhBC,IAAAA,QAAQ,EAARA,QAJgB;AAKhBC,IAAAA,OAAO,EAAPA;AALgB,GAApB;AAOAV,EAAAA,WAAW,CAACa,QAAZ,CAAqBF,WAArB,EAAkC,UAACG,GAAD,EAAMC,IAAN,EAAa;AAC3C,QAAGD,GAAH,EAAO;AACHE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,GAArB;AACH,KAFD,MAGI;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,GAPD;AAQH;;AACDX,SAAS,CAAC,oBAAD,EAAsB,4DAAtB,EAAmF,SAAnF,EAA8F;AAACY,EAAAA,MAAM,EAAC;AAAR,CAA9F,CAAT,C,CAEA;;AACA/B,QAAQ,CAACgC,OAAT,CAAiB,2CAAjB,EACKC,IADL,CACU;AAAA,SAAMJ,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CADV,WAEW,UAAAH,GAAG;AAAA,SAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAJ;AAAA,CAFd,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMO,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA9B,GAAG,CAACiC,MAAJ,CAAWH,IAAX,EAAiB;AAAA,SAAML,OAAO,CAACC,GAAR,kCAAsCI,IAAtC,EAAN;AAAA,CAAjB","sourcesContent":["const express = require('express');\r\nconst cors = require('cors')\r\nconst nodemailer = require('nodemailer')\r\nconst hbs = require('nodemailer-express-handlebars')\r\nconst mongoose = require('mongoose');\r\nconst authRoutes = require('./routes/auth');\r\nconst privateRoutes = require('./routes/private');\r\nconst randomString = require('randomstring')\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cors())\r\n\r\n// Routes\r\napp.use('/api/auth', authRoutes);\r\napp.use('/api/private', privateRoutes);\r\n\r\n//Configure handlebars \r\nconst hbsOptions = {\r\n    viewEngine:{\r\n        defaultLayout:'baseMessage',\r\n        partialsDir:'views',\r\n        layoutsDir:'views'\r\n    },\r\n    viewPath:'views'\r\n}\r\nconst transporter = nodemailer.createTransport({\r\n    service:'gmail',\r\n    auth:{\r\n        user:'bguru757@gmail.com',\r\n        pass:'xpgzyyfbkeggfmod'\r\n    }\r\n})\r\ntransporter.use('compile', hbs(hbsOptions))\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction sendEmail(to, subject, template, context){\r\n    const mailOptions = {\r\n        from : 'bguru757@gmail.com',\r\n        to,\r\n        subject,\r\n        template,\r\n        context,\r\n    }\r\n    transporter.sendMail(mailOptions, (err, info)=>{\r\n        if(err){\r\n            console.log('Error', err)\r\n        }\r\n        else{\r\n            console.log('Message sent')\r\n        }\r\n    })\r\n}\r\nsendEmail('bguru757@gmail.com','Dynamic email Templates with nodemailer-express-handlebars','message', {access:'123456'})\r\n\r\n// MongoDB Connection\r\nmongoose.connect('mongodb://localhost:27017/roleBasedAccess', )\r\n    .then(() => console.log('MongoDB connected...'))\r\n    .catch(err => console.log(err));\r\n\r\n// async function generateOTP (){\r\n//     return randomString.generate({\r\n//         length:6,\r\n//         charset:'numeric'\r\n//     })\r\n// }\r\n// const OTP = generateOTP()\r\n// console.log(OTP)\r\n\r\nconst PORT = process.env.PORT || 8000;\r\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n"],"file":"server.dev.js"}