{"version":3,"sources":["server.js"],"names":["express","require","cors","hbs","authRoutes","nodemailer","randomString","app","use","json","hbsOptions","partialsDir","layoutsDir","viewPath","viewEngine","createTransport","defaultLayout","pass","transporter","to","subject","context","mailOptions","from","sendEmail","err","sendMail","console","log","access","connect","then","PORT","process","env","listen","concat"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,WAAUC,QAAQ,cAGlBE,IAAMF,QAAQ,iCAFdC,SAAOD,QAAO,YAIdG,WAAaH,QAAQ,iBAHrBI,cAAaJ,QAAQ,oBAKrBK,aAAeL,QAAQ,gBAJvBE,IAAMF,UAQZM,IAAIC,IAAIR,QAAQS,QANhBF,IAAMH,IAAAA,QAUNG,IAAIC,IAAI,YAAaJ,YARrBG,IAAMD,IAAAA,eAAeL,eAYrB,IAAMS,WAAa,CARfF,WAAW,CACPN,cAER,cAQQS,YAAY,QAPZC,WAAR,SAUIC,SAAS,SALTC,YAAWT,WAAAU,gBAAA,CACPC,QAAAA,QACAL,KAAAA,CACAC,KAAAA,qBAJWK,KAAA,sBAenBC,SAAAA,UAAgBC,EAAAC,EAAeV,EAA/BW,GAQI,IAAMC,EAAc,CADxBC,KAASC,qBACCF,GAAAA,EACEF,QAAAA,EACJD,SAAAA,EACAC,QAAAA,GAEAC,YAAAA,SAAAA,EAAAA,SAAAA,EAAAA,GALJI,EAOAP,QAAYQ,IAASJ,QAAAA,GAIbK,QAAAC,IAAA,kBA1BZV,YAAMA,IAAW,UAAGb,IAAWU,aA8B9BS,UAAA,qBAAA,6DAAA,UAAA,CAAAK,OAAA,WACuGA,SAAMC,QAAC,6CAE/GC,KAAA,WAAA,OAAAJ,QAAAC,IAAA,0BAFwGC,MAK7F,SAAAJ,GAAG,OAAIE,QAAQC,IAAIH,KAQ9B,IAAAO,KAAAC,QAAAC,IAAAF,MAAA,IACAzB,IAAA4B,OAAAH,KAAA,WAAA,OAAAL,QAAAC,IAAA,0BAAAQ,OAAAJ","file":"server.min.js","sourcesContent":["const express = require('express');\r\nconst cors = require('cors')\r\nconst nodemailer = require('nodemailer')\r\nconst hbs = require('nodemailer-express-handlebars')\r\nconst mongoose = require('mongoose');\r\nconst authRoutes = require('./routes/auth');\r\nconst privateRoutes = require('./routes/private');\r\nconst randomString = require('randomstring')\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cors())\r\n\r\n// Routes\r\napp.use('/api/auth', authRoutes);\r\napp.use('/api/private', privateRoutes);\r\n\r\n//Configure handlebars \r\nconst hbsOptions = {\r\n    viewEngine:{\r\n        defaultLayout:'baseMessage',\r\n        partialsDir:'views',\r\n        layoutsDir:'views'\r\n    },\r\n    viewPath:'views'\r\n}\r\nconst transporter = nodemailer.createTransport({\r\n    service:'gmail',\r\n    auth:{\r\n        user:'bguru757@gmail.com',\r\n        pass:'xpgzyyfbkeggfmod'\r\n    }\r\n})\r\ntransporter.use('compile', hbs(hbsOptions))\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction sendEmail(to, subject, template, context){\r\n    const mailOptions = {\r\n        from : 'bguru757@gmail.com',\r\n        to,\r\n        subject,\r\n        template,\r\n        context,\r\n    }\r\n    transporter.sendMail(mailOptions, (err, info)=>{\r\n        if(err){\r\n            console.log('Error', err)\r\n        }\r\n        else{\r\n            console.log('Message sent')\r\n        }\r\n    })\r\n}\r\nsendEmail('bguru757@gmail.com','Dynamic email Templates with nodemailer-express-handlebars','message', {access:'123456'})\r\n\r\n// MongoDB Connection\r\nmongoose.connect('mongodb://localhost:27017/roleBasedAccess', )\r\n    .then(() => console.log('MongoDB connected...'))\r\n    .catch(err => console.log(err));\r\n\r\n// async function generateOTP (){\r\n//     return randomString.generate({\r\n//         length:6,\r\n//         charset:'numeric'\r\n//     })\r\n// }\r\n// const OTP = generateOTP()\r\n// console.log(OTP)\r\n\r\nconst PORT = process.env.PORT || 8000;\r\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n"]}